extends layout

block content
    .content
        .lTower
            .lBox
                .lBoxTitle Регистрация
                .lBoxItem
                    input.lBoxInput#f(type="text" placeholder="Фамилия" )
                .lBoxItem
                    input.lBoxInput#i(type="text" placeholder="Имя")
                .lBoxItem
                    .lBoxInput#lDepartBox(onclick="document.getElementById('lDepartWr').classList.remove('hidden')" onkeyup="")
                        #lDepartTitle
                            span#lDepartTitlePlaceholeder Подразделение
                        #lDepartIcon
                            <svg width="14" height="8" viewBox="0 0 14 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path opacity="0.7" d="M1 1L6.29289 6.29289C6.68342 6.68342 7.31658 6.68342 7.70711 6.29289L13 1" stroke="#555555" stroke-width="1.5" stroke-linecap="round"/>
                            </svg>
                        #lDepartWr.hidden
                .lBoxItem
                    input.lBoxInput#code(type="text" placeholder="Код")
                .lBoxItem
                    #lBoxISubmit(onclick="login(this)")
                        .lBoxISubmitTitle Войти
                        .lBoxISubmitLoader
                            <svg class="spinner" viewBox="0 0 50 50">
                            <circle class="path" cx="25" cy="25" r="20" fill="none" stroke-width="5"></circle>
                            </svg>
                #BoxError.hidden
            include elems/support

    script.

        (async ()=> {
            const depatments=(await axios.get("/api/depatments")).data;
           // for(let i=0; i<20;i++)
            depatments.forEach(d=>{
                let item= document.createElement("div");
                item.classList.add("departItem");
                item.innerHTML=d.title;
                item.deptId=d.id;
                item.setAttribute("department", d.id)
                item.addEventListener("click",(e)=>{
                    e.preventDefault();
                    e.stopPropagation();
                    let elem = document.getElementById("lDepartTitle");
                    elem.innerHTML=d.title;
                    elem.setAttribute("department",d.id)
                    e.target.parentElement.classList.add('hidden');
                    document.getElementById("code").focus();
                })
                document.getElementById("lDepartWr").appendChild(item);

                document.querySelectorAll("input.lBoxInput").forEach(elem=>{
                    elem.addEventListener("keyup",(event)=>{
                        if (event.code === 'Enter') {
                            login(document.getElementById("lBoxISubmit"))
                        }
                    })
                })
                document.getElementById("f").focus();

            })


        })();
        const login= async (ctrl)=>{
            const exit = () => {
                setTimeout(() => {
                    ctrl.classList.remove('loading');

                }, 1000)
            }
            const setError=(elem)=>{
                elem.classList.add("error");


                if(elem) elem.focus();
            }
            if(ctrl.classList.contains("loading"))
                return;
            ctrl.classList.add('loading');
            document.getElementById("BoxError").classList.add("hidden")
            const arr={
                i:document.getElementById("i"),
                f:document.getElementById("f"),
                code:document.getElementById("code"),
                dep:document.getElementById("lDepartTitle")//.getAttribute("department")
            }
            document.querySelectorAll(".lBoxInput.error").forEach(e=>{e.classList.remove("error")})
            if (!arr.f.value || arr.f.value.length < 2) {
                setError(arr.f)
                return exit();
            }
            if(!arr.i.value || arr.i.value.length<2)
            {
                setError(arr.i)
                return exit();
            }
            if (!arr.code.value || arr.code.value.length !=5) {
                setError(arr.code)
                return exit();
            }
            let dep = arr.dep.getAttribute("department")
            if (!arr.dep.getAttribute("department")) {
                setError(arr.dep.parentNode)
                return exit();
            }
            try {
                let r = await axios.post("/api/login", {
                    f: arr.f.value,
                    i: arr.i.value,
                    code: arr.code.value,
                    dep: dep
                });
                if (r.data.success) {
                    setTimeout(()=>{document.location.reload()},2000)

                }
                else{
                    if(r.data.doubleLogin){
                        document.getElementById("BoxError").innerHTML="Ошибка: Выполнен вход с дугого устройства.<br> Попробуйте через 30 секунд или выйдите с этого сайта на других вкладках браузера."
                    }
                    else {
                        document.getElementById("BoxError").innerHTML="Ошибка: проверьте Фамилию, имя и код"
                    }
                    document.querySelectorAll(".lBoxInput.error").forEach(e => {
                        e.classList.remove("error")
                    })
                    document.getElementById("BoxError").classList.remove("hidden");
                    return exit();
                }
            }
            catch(e){
                console.warn(e);
                document.querySelectorAll(".lBoxInput.error").forEach(e=>{e.classList.remove("error")})
                document.getElementById("BoxError").classList.remove("hidden");
                return exit()
            }



        }


